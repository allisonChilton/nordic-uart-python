[tool.poetry]
name = "nordic-uart"
version = "0.1.0"
description = ""
authors = ["Allison Chilton <github.allie@protonmail.com>"]
readme = "README.md"
packages = [{include = "nordic_uart"}]

[tool.poetry.dependencies]
python = "^3.10"
bleak = "^0.20.2"
pytest-asyncio = "^0.21.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0"
pytest-cov = "^3.0"
build = "^0.10.0"

[tool.mypy]

[tool.ruff]
ignore = [
    "RUF001", # ruff-specific rules ambiguous-unicode-character-string
    "S101", # flake8-bandit assert
    "S308", # flake8-bandit suspicious-mark-safe-usage
    "E501", # pycodestyle line-too-long
]
line-length = 140
select = [
    "B", # flake8-bugbear
    "C4", # flake8-comprehensions
    "DTZ", # flake8-datetimez
    "E", # pycodestyle errors
    "EXE", # flake8-executable
    "F", # pyflakes
    "I", # isort
    "INT", # flake8-gettext
    "PIE", # flake8-pie
    "PLC", # pylint convention
    "PLE", # pylint errors
    "PT", # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "Q", # flake8-quotes
    "RSE", # flake8-raise
    "RUF", # ruff-specific rules
    "S", # flake8-bandit
    "UP", # pyupgrade
    "W", # pycodestyle warnings
]
src = ["src", "tests"]
target-version = "py37"


[tool.ruff.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.ruff.isort]
forced-separate = ["conftest"]
force-single-line = true

[tool.black]
line-length = 140
target-version = ["py37"]


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
